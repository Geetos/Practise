<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jxtele.projectmanage.dao.ProjectMapper" >
  <resultMap id="BaseResultMap" type="com.jxtele.projectmanage.entity.Project" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="project_code" property="projectCode" jdbcType="VARCHAR" />
    <result column="project_name" property="projectName" jdbcType="VARCHAR" />
    <result column="register_time" property="registerTime" jdbcType="TIMESTAMP" />
    <result column="project_nature" property="projectNature" jdbcType="VARCHAR" />
    <result column="outsource_reason" property="outsourceReason" jdbcType="VARCHAR" />
    <result column="project_type" property="projectType" jdbcType="VARCHAR" />
    <result column="project_industry" property="projectIndustry" jdbcType="VARCHAR" />
    <result column="project_Subscriber" property="projectSubscriber" jdbcType="VARCHAR" />
    <result column="project_departmen" property="projectDepartmen" jdbcType="VARCHAR" />
    <result column="customer_manager" property="customerManager" jdbcType="VARCHAR" />
    <result column="project_manager" property="projectManager" jdbcType="VARCHAR" />
    <result column="project_status" property="projectStatus" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, project_code, project_name, register_time, project_nature, outsource_reason, 
    project_type, project_industry, project_Subscriber, project_departmen, customer_manager, 
    project_manager, project_status, user_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from dx_jf_project
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from dx_jf_project
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="pm" >
    insert into dx_jf_project (project_code, project_name,
      register_time, project_nature, outsource_reason, 
      project_type, project_industry, project_Subscriber, 
      project_departmen, customer_manager, project_manager, 
      project_status, user_id)
    values (#{project_code}, #{project_name},
      #{register_time}, #{project_nature}, #{outsource_reason},
      #{project_type}, #{project_industry}, #{project_Subscriber},
      #{project_departmen}, #{customer_manager}, #{project_manager},
      #{project_status}, #{user_id})
  </insert>
  <insert id="insertSelective" parameterType="com.jxtele.projectmanage.entity.Project" >
    insert into dx_jf_project
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="projectCode != null" >
        project_code,
      </if>
      <if test="projectName != null" >
        project_name,
      </if>
      <if test="registerTime != null" >
        register_time,
      </if>
      <if test="projectNature != null" >
        project_nature,
      </if>
      <if test="outsourceReason != null" >
        outsource_reason,
      </if>
      <if test="projectType != null" >
        project_type,
      </if>
      <if test="projectIndustry != null" >
        project_industry,
      </if>
      <if test="projectSubscriber != null" >
        project_Subscriber,
      </if>
      <if test="projectDepartmen != null" >
        project_departmen,
      </if>
      <if test="customerManager != null" >
        customer_manager,
      </if>
      <if test="projectManager != null" >
        project_manager,
      </if>
      <if test="projectStatus != null" >
        project_status,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="projectCode != null" >
        #{projectCode,jdbcType=VARCHAR},
      </if>
      <if test="projectName != null" >
        #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null" >
        #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="projectNature != null" >
        #{projectNature,jdbcType=VARCHAR},
      </if>
      <if test="outsourceReason != null" >
        #{outsourceReason,jdbcType=VARCHAR},
      </if>
      <if test="projectType != null" >
        #{projectType,jdbcType=VARCHAR},
      </if>
      <if test="projectIndustry != null" >
        #{projectIndustry,jdbcType=VARCHAR},
      </if>
      <if test="projectSubscriber != null" >
        #{projectSubscriber,jdbcType=VARCHAR},
      </if>
      <if test="projectDepartmen != null" >
        #{projectDepartmen,jdbcType=VARCHAR},
      </if>
      <if test="customerManager != null" >
        #{customerManager,jdbcType=VARCHAR},
      </if>
      <if test="projectManager != null" >
        #{projectManager,jdbcType=VARCHAR},
      </if>
      <if test="projectStatus != null" >
        #{projectStatus,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jxtele.projectmanage.entity.Project" >
    update dx_jf_project
    <set >
      <if test="project_code != null and project_code != ''" >
        project_code = #{project_code},
      </if>
      <if test="project_name != null and project_name != ''" >
        project_name = #{project_name},
      </if>
     <!-- <if test="register_time != null and register_time != ''" >
        register_time = #{register_time},
      </if>-->
      <if test="project_nature != null and project_nature != ''" >
        project_nature = #{project_nature},
      </if>
      <if test="outsource_reason != null and outsource_reason != ''" >
        outsource_reason = #{outsource_reason},
      </if>
      <if test="project_type != null and project_type != ''" >
        project_type = #{project_type},
      </if>
      <if test="project_industry != null and project_industry != ''" >
        project_industry = #{project_industry},
      </if>
      <if test="project_Subscriber != null and project_Subscriber != ''" >
        project_Subscriber = #{project_Subscriber},
      </if>
      <if test="project_departmen != null and project_departmen != ''" >
        project_departmen = #{project_departmen},
      </if>
      <if test="customer_manager != null and customer_manager != ''" >
        customer_manager = #{customer_manager},
      </if>
      <if test="project_manager != null and project_manager != ''" >
        project_manager = #{project_manager},
      </if>
      <if test="project_status != null and project_status != ''" >
        project_status = #{project_status},
      </if>
      <!--<if test="user_id != null" >
        user_id = #{user_id},
      </if>-->
    </set>
    where id = #{id}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jxtele.projectmanage.entity.Project" >
    update dx_jf_project
    set project_code = #{projectCode,jdbcType=VARCHAR},
      project_name = #{projectName,jdbcType=VARCHAR},
      register_time = #{registerTime,jdbcType=TIMESTAMP},
      project_nature = #{projectNature,jdbcType=VARCHAR},
      outsource_reason = #{outsourceReason,jdbcType=VARCHAR},
      project_type = #{projectType,jdbcType=VARCHAR},
      project_industry = #{projectIndustry,jdbcType=VARCHAR},
      project_Subscriber = #{projectSubscriber,jdbcType=VARCHAR},
      project_departmen = #{projectDepartmen,jdbcType=VARCHAR},
      customer_manager = #{customerManager,jdbcType=VARCHAR},
      project_manager = #{projectManager,jdbcType=VARCHAR},
      project_status = #{projectStatus,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="findProjectByUserid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
     p.id, p.project_code, p.project_name, p.register_time, p.project_nature, p.outsource_reason,
    p.project_type, p.project_industry, p.project_Subscriber, p.project_departmen, p.customer_manager,
    p.project_manager, p.project_status, p.user_id
    from dx_jf_project p
    where p.id not in
    (select t.project_id
    from dx_jf_user_templet t
    where  t.user_id = #{user_id,jdbcType=INTEGER})
  </select>

  <select id="findAllProject"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from dx_jf_project
  </select>

  <select id="findProjectByTeamBuild"  resultMap="BaseResultMap">
    select
    p.id, p.project_code, p.project_name, p.register_time, p.project_nature, p.outsource_reason,
    p.project_type, p.project_industry, p.project_Subscriber, p.project_departmen, p.customer_manager,
    p.project_manager, p.project_status, p.user_id
    from dx_jf_project p
    left join dx_jf_team_building b on b.project_id=p.id
    where b.sys_userid = #{user_id,jdbcType=INTEGER}
    and p.id not in (select t.project_id
    from dx_jf_user_templet t
    where  t.user_id = #{user_id,jdbcType=INTEGER} )
  </select>

</mapper>