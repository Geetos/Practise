<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jxtele.projectmanage.dao.IntegralMapper" >
  <resultMap id="BaseResultMap" type="com.jxtele.projectmanage.entity.Integral" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="project_id" property="projectId" jdbcType="INTEGER" />
    <result column="moninfo_id" property="moninfoId" jdbcType="INTEGER" />
    <result column="integralmoney" property="integralmoney" jdbcType="DECIMAL" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
    <collection property="integralItems" ofType="com.jxtele.projectmanage.entity.IntegralItem"
                column="id" select="com.jxtele.projectmanage.dao.IntegralItemMapper.findIntegralItemByIntegralId">
    </collection>
  </resultMap>
  <sql id="Base_Column_List" >
    id, project_id, moninfo_id, integralmoney, reason
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from dx_jf_integral_distribut
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from dx_jf_integral_distribut
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jxtele.projectmanage.entity.Integral" >
    insert into dx_jf_integral_distribut (id, project_id, moninfo_id, 
      integralmoney, reason)
    values (#{id,jdbcType=INTEGER}, #{projectId,jdbcType=INTEGER}, #{moninfoId,jdbcType=INTEGER}, 
      #{integralmoney,jdbcType=DECIMAL}, #{reason,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jxtele.projectmanage.entity.Integral" >
    insert into dx_jf_integral_distribut
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="projectId != null" >
        project_id,
      </if>
      <if test="moninfoId != null" >
        moninfo_id,
      </if>
      <if test="integralmoney != null" >
        integralmoney,
      </if>
      <if test="reason != null" >
        reason,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="moninfoId != null" >
        #{moninfoId,jdbcType=INTEGER},
      </if>
      <if test="integralmoney != null" >
        #{integralmoney,jdbcType=DECIMAL},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jxtele.projectmanage.entity.Integral" >
    update dx_jf_integral_distribut
    <set >
      <if test="projectId != null" >
        project_id = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="moninfoId != null" >
        moninfo_id = #{moninfoId,jdbcType=INTEGER},
      </if>
      <if test="integralmoney != null" >
        integralmoney = #{integralmoney,jdbcType=DECIMAL},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jxtele.projectmanage.entity.Integral" >
    update dx_jf_integral_distribut
    set project_id = #{projectId,jdbcType=INTEGER},
      moninfo_id = #{moninfoId,jdbcType=INTEGER},
      integralmoney = #{integralmoney,jdbcType=DECIMAL},
      reason = #{reason,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="findIntegralByProjId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from dx_jf_integral_distribut
    where project_id = #{projid,jdbcType=INTEGER}
  </select>

</mapper>